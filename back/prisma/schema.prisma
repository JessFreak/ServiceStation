generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  WORKER
  ADMIN
}

model User {
  id        String  @id @default(uuid()) @db.VarChar(36)
  name      String  @db.VarChar(100)
  surname   String  @db.VarChar(100)
  email     String  @unique @db.VarChar(255)
  phone     String? @unique @db.VarChar(20)
  avatarUrl String? @map("avatar_url")
  password  String
  role      Role    @default(USER)

  vehicles      Vehicle[]
  workingOrders Order[]

  @@map("users")
}

enum Type {
  CAR
  TRUCK
  MOTORCYCLE
  BUS
  VAN
}

model Vehicle {
  id    String @id @default(uuid()) @db.VarChar(36)
  model String
  year  Int    @db.SmallInt
  vin   String @unique @db.VarChar(17)
  type  Type

  userId String @map("user_id") @db.VarChar(36)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  orders Order[]

  @@map("vehicles")
}

enum Status {
  WAITING
  PROCESSING
  DONE
  CANCELED
}

model Order {
  id        String   @id @default(uuid()) @db.VarChar(36)
  status    Status   @default(WAITING)
  orderDate DateTime
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  vehicleId String?  @map("vehicle_id") @db.VarChar(36)
  vehicle   Vehicle? @relation(fields: [vehicleId], references: [id], onDelete: SetNull)

  workerId String? @map("worker_id") @db.VarChar(36)
  worker   User?   @relation(fields: [workerId], references: [id], onDelete: SetNull)

  services OrderService[]

  @@map("orders")
}

model Service {
  id          String   @id @default(uuid()) @db.VarChar(36)
  name        String   @db.VarChar(100)
  description String?
  price       Float
  isActive    Boolean  @map("is_active") @default(true)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  imageUrl    String?  @map("image_url")

  orders OrderService[]

  @@map("services")
}

model OrderService {
  orderId String @map("order_id") @db.VarChar(36)
  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)

  serviceId String  @map("service_id") @db.VarChar(36)
  service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@id([orderId, serviceId])
  @@map("orders_services")
}
